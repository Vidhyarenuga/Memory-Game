{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Vidhya\\\\Desktop\\\\memory-game-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vidhya\\\\Desktop\\\\memory-game-master\\\\src\\\\Show.js\";\nimport React, { useState } from 'react';\n\nconst Show = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        GuessedNumber = _useState2[0],\n        setGuessedNumber = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        correctGuess = _useState4[0],\n        setcorrectGuess = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showResult = _useState6[0],\n        setshowResult = _useState6[1];\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let temp = localStorage.getItem('number');\n    let i = 0,\n        guess = i;\n\n    while (GuessedNumber[i] === temp[i]) {\n      i++;\n      guess = i;\n\n      if (guess === 6) {\n        break;\n      }\n    }\n\n    setcorrectGuess(guess);\n    setshowResult(true);\n  };\n\n  const restart = () => {\n    localStorage.removeItem('number');\n    props.history.push('/');\n  };\n\n  if (showResult === true) {\n    var result = React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, correctGuess, \" correct guesses\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Guess The Number\"), React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    max: \"999999\",\n    onChange: e => {\n      setGuessedNumber(e.target.value);\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Guess\")), React.createElement(\"button\", {\n    onClick: restart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Replay Game\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), result);\n};\n\nexport default Show;","map":{"version":3,"sources":["C:/Users/Vidhya/Desktop/memory-game-master/src/Show.js"],"names":["React","useState","Show","props","GuessedNumber","setGuessedNumber","correctGuess","setcorrectGuess","showResult","setshowResult","submitHandler","e","preventDefault","temp","localStorage","getItem","i","guess","restart","removeItem","history","push","result","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,IAAI,GAAEC,KAAD,IAAS;AAAA,oBAIkCF,QAAQ,EAJ1C;AAAA;AAAA,QAIDG,aAJC;AAAA,QAIcC,gBAJd;;AAAA,qBAKgCJ,QAAQ,CAAC,CAAD,CALxC;AAAA;AAAA,QAKDK,YALC;AAAA,QAKaC,eALb;;AAAA,qBAM4BN,QAAQ,CAAC,KAAD,CANpC;AAAA;AAAA,QAMDO,UANC;AAAA,QAMWC,aANX;;AASR,QAAMC,aAAa,GAAEC,CAAD,IAAK;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX;AACA,QAAIC,CAAC,GAAC,CAAN;AAAA,QAASC,KAAK,GAACD,CAAf;;AACA,WAAMZ,aAAa,CAACY,CAAD,CAAb,KAAmBH,IAAI,CAACG,CAAD,CAA7B,EAAiC;AACzBA,MAAAA,CAAC;AACDC,MAAAA,KAAK,GAACD,CAAN;;AACA,UAAGC,KAAK,KAAG,CAAX,EAAa;AACb;AACH;AACJ;;AAETV,IAAAA,eAAe,CAACU,KAAD,CAAf;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACC,GAdD;;AAgBA,QAAMS,OAAO,GAAC,MAAI;AAClBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,QAAxB;AACAhB,IAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACC,GAHD;;AAMA,MAAGb,UAAU,KAAG,IAAhB,EAAqB;AACjB,QAAIc,MAAM,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,YAAL,qBAAX;AACH;;AAET,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA;AAAM,IAAA,QAAQ,EAAEI,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,GAAG,EAAC,QAAzB;AAAmC,IAAA,QAAQ,EAAGC,CAAD,IAAK;AAACN,MAAAA,gBAAgB,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CAAhB;AAAiC,KAApF;AAAuF,IAAA,QAAQ,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAS,IAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHA,CAFA,EAQA;AAAQ,IAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARA,OAQ+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAR/C,EASCI,MATD,CADJ;AAaH,CAhDD;;AAkDA,eAAepB,IAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst Show=(props)=>{\n\n\n\n            const [GuessedNumber, setGuessedNumber] = useState();\n            const [correctGuess, setcorrectGuess] = useState(0);\n            const [showResult, setshowResult] = useState(false);\n     \n     \n            const submitHandler=(e)=>{\n                    e.preventDefault();\n                    let temp = localStorage.getItem('number');\n                    let i=0, guess=i;\n                    while(GuessedNumber[i]===temp[i]){\n                            i++;\n                            guess=i; \n                            if(guess===6){\n                            break;\n                        } \n                    }\n        \n            setcorrectGuess(guess);\n            setshowResult(true);\n            }\n\n            const restart=()=>{\n            localStorage.removeItem('number');\n            props.history.push('/');\n            }\n\n\n            if(showResult===true){\n                var result=<h2>{correctGuess} correct guesses</h2>\n            }\n   \n    return(\n        <div>\n        <h1>Guess The Number</h1> \n        <form onSubmit={submitHandler}>\n        <input type='number' max=\"999999\"  onChange={(e)=>{setGuessedNumber(e.target.value)}}  required></input>\n        <br />\n        <button  type=\"submit\">Guess</button>\n        \n        </form>\n        <button onClick={restart}>Replay Game</button> <br/>\n        {result}       \n        </div>\n    );\n}\n\nexport default Show;"]},"metadata":{},"sourceType":"module"}